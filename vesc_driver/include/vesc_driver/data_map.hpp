/*********************************************************************
 * Copyright (c) 2019, SoftBank corp.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 ********************************************************************/

#ifndef VESC_DRIVER_DATA_MAP_HPP_
#define VESC_DRIVER_DATA_MAP_HPP_

#include <cstdint>

namespace vesc_driver {
/**
 * @brief ID of communication commands
 **/
enum class COMM_PACKET_ID : int16_t {
  COMM_FW_VERSION = 0,
  COMM_JUMP_TO_BOOTLOADER,
  COMM_ERASE_NEW_APP,
  COMM_WRITE_NEW_APP_DATA,
  COMM_GET_VALUES,
  COMM_SET_DUTY,
  COMM_SET_CURRENT,
  COMM_SET_CURRENT_BRAKE,
  COMM_SET_ERPM,
  COMM_SET_POS,
  COMM_SET_HANDBRAKE,
  COMM_SET_DETECT,
  COMM_SET_SERVO_POS,
  COMM_SET_MCCONF,
  COMM_GET_MCCONF,
  COMM_GET_MCCONF_DEFAULT,
  COMM_SET_APPCONF,
  COMM_GET_APPCONF,
  COMM_GET_APPCONF_DEFAULT,
  COMM_SAMPLE_PRINT,
  COMM_TERMINAL_CMD,
  COMM_PRINT,
  COMM_ROTOR_POSITION,
  COMM_EXPERIMENT_SAMPLE,
  COMM_DETECT_MOTOR_PARAM,
  COMM_DETECT_MOTOR_R_L,
  COMM_DETECT_MOTOR_FLUX_LINKAGE,
  COMM_DETECT_ENCODER,
  COMM_DETECT_HALL_FOC,
  COMM_REBOOT,
  COMM_ALIVE,
  COMM_GET_DECODED_PPM,
  COMM_GET_DECODED_ADC,
  COMM_GET_DECODED_CHUK,
  COMM_FORWARD_CAN,
  COMM_SET_CHUCK_DATA,
  COMM_CUSTOM_APP_DATA,
  COMM_NRF_START_PAIRING
};

/**
 * @brief Map of return packets
 **/
enum class PACKET_MAP : uint8_t {
  TEMP_MOS = 1,
  TEMP_MOTOR = 3,
  CURRENT_MOTOR = 5,
  CURRENT_IN = 9,
  ID = 13,
  IQ = 17,
  DUTY_NOW = 21,
  ERPM = 23,
  VOLTAGE_IN = 27,
  AMP_HOURS = 29,
  AMP_HOURS_CHARGED = 33,
  WATT_HOURS = 37,
  WATT_HOURS_CHARGED = 41,
  TACHOMETER = 45,
  TACHOMETER_ABS = 49,
  FAULT_CODE = 53,
};

enum class CAN_PACKET_ID : std::uint32_t {
  CAN_PACKET_SET_DUTY = 0,
  CAN_PACKET_SET_CURRENT = 1,
  CAN_PACKET_SET_CURRENT_BRAKE = 2,
  CAN_PACKET_SET_RPM = 3,
  CAN_PACKET_SET_POS = 4,
  CAN_PACKET_FILL_RX_BUFFER = 5,
  CAN_PACKET_FILL_RX_BUFFER_LONG = 6,
  CAN_PACKET_PROCESS_RX_BUFFER = 7,
  CAN_PACKET_PROCESS_SHORT_BUFFER = 8,
  CAN_PACKET_STATUS = 9,
  CAN_PACKET_SET_CURRENT_REL = 10,
  CAN_PACKET_SET_CURRENT_BRAKE_REL = 11,
  CAN_PACKET_SET_CURRENT_HANDBRAKE = 12,
  CAN_PACKET_SET_CURRENT_HANDBRAKE_REL = 13,
  CAN_PACKET_STATUS_2 = 14,
  CAN_PACKET_STATUS_3 = 15,
  CAN_PACKET_STATUS_4 = 16,
  CAN_PACKET_PING = 17,
  CAN_PACKET_PONG = 18,
  CAN_PACKET_DETECT_APPLY_ALL_FOC = 19,
  CAN_PACKET_DETECT_APPLY_ALL_FOC_RES = 20,
  CAN_PACKET_CONF_CURRENT_LIMITS = 21,
  CAN_PACKET_CONF_STORE_CURRENT_LIMITS = 22,
  CAN_PACKET_CONF_CURRENT_LIMITS_IN = 23,
  CAN_PACKET_CONF_STORE_CURRENT_LIMITS_IN = 24,
  CAN_PACKET_CONF_FOC_ERPMS = 25,
  CAN_PACKET_CONF_STORE_FOC_ERPMS = 26,
  CAN_PACKET_STATUS_5 = 27,
  CAN_PACKET_POLL_TS5700N8501_STATUS = 28,
  CAN_PACKET_CONF_BATTERY_CUT = 29,
  CAN_PACKET_CONF_STORE_BATTERY_CUT = 30,
  CAN_PACKET_SHUTDOWN = 31,
  CAN_PACKET_IO_BOARD_ADC_1_TO_4 = 32,
  CAN_PACKET_IO_BOARD_ADC_5_TO_8 = 33,
  CAN_PACKET_IO_BOARD_ADC_9_TO_12 = 34,
  CAN_PACKET_IO_BOARD_DIGITAL_IN = 35,
  CAN_PACKET_IO_BOARD_SET_OUTPUT_DIGITAL = 36,
  CAN_PACKET_IO_BOARD_SET_OUTPUT_PWM = 37,
  CAN_PACKET_BMS_V_TOT = 38,
  CAN_PACKET_BMS_I = 39,
  CAN_PACKET_BMS_AH_WH = 40,
  CAN_PACKET_BMS_V_CELL = 41,
  CAN_PACKET_BMS_BAL = 42,
  CAN_PACKET_BMS_TEMPS = 43,
  CAN_PACKET_BMS_HUM = 44,
  CAN_PACKET_BMS_SOC_SOH_TEMP_STAT = 45,
  CAN_PACKET_PSW_STAT = 46,
  CAN_PACKET_PSW_SWITCH = 47,
  CAN_PACKET_BMS_HW_DATA_1 = 48,
  CAN_PACKET_BMS_HW_DATA_2 = 49,
  CAN_PACKET_BMS_HW_DATA_3 = 50,
  CAN_PACKET_BMS_HW_DATA_4 = 51,
  CAN_PACKET_BMS_HW_DATA_5 = 52,
  CAN_PACKET_BMS_AH_WH_CHG_TOTAL = 53,
  CAN_PACKET_BMS_AH_WH_DIS_TOTAL = 54,
  CAN_PACKET_UPDATE_PID_POS_OFFSET = 55,
  CAN_PACKET_POLL_ROTOR_POS = 56,
  CAN_PACKET_NOTIFY_BOOT = 57,
  CAN_PACKET_STATUS_6 = 58,
  CAN_PACKET_GNSS_TIME = 59,
  CAN_PACKET_GNSS_LAT = 60,
  CAN_PACKET_GNSS_LON = 61,
  CAN_PACKET_GNSS_ALT_SPEED_HDOP = 62,
  CAN_PACKET_UPDATE_CAN_ID = 63,
  CAN_PACKET_ENABLE_PID_POS_OFFSET_POT_CALIB = 64,
};

}  // namespace vesc_driver
#endif  // VESC_DRIVER_DATA_MAP_HPP_
